name: CI Sidebar SDK JS

on:
  push:
    branches: [build-migration]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [master]
  schedule:
    - cron: "30 5 * * *"
  workflow_dispatch:
    inputs:
      reason:
        description: "Trigger Comment (Optional)"
        required: false
        default: "Manual Workflow Run"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        node: [14.x]
        
    steps:
      - uses: actions/checkout@v2

      - name: Sidebar SDK Test
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - run: |
          npm ci
          npm run build
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=acrolinx
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}

      - name: Setup and Audit Source Code    
        run: |
          npm ci
          npm audit --production --audit-level=moderate   
          
      - name: Check for suitable licenses
        run: |
         export v=`node -p "require('./package.json').version"`
         export n=`node -p "require('./package.json').name"`
         npx license-checker --production --onlyAllow 'BSD;CC-PDDC;CC-BY-3.0;CC-BY-1.0;CC-BY-2.0;CC-BY-4.0;CC0-1.0;Apache;Artistic;MIT;MPL;ISC;Unlicense' --excludePackages "$n@$v$LICENSE_EXCLUDED_PACKAGES" --excludePrivatePackages
      - run: npm ci
      - run: npm run lint
      - run: |
          npm run build 
          npm run buildDoc
          # npm version patch -m "Release version %s" -f 
          
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            dist/**/*
      
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: tmp/reports/coverage/**/cobertura-coverage.xml

      - name: Publish to NPM
        if: github.event_name == 'push' && ( github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' )
        id: publish
        uses: JS-DevTools/npm-publish@v1
        with:
          token: ${{ secrets.NPM_ACCESS_TOKEN }}
      
      - name: Check steps run in sequence
        if: steps.publish.outputs.type != 'none'
        run: echo "Run sequentially"

      # - name: Publish github pages ðŸš€
      #   if: steps.publish.outputs.type != 'none'
      #   uses: JamesIves/github-pages-deploy-action@4.1.4
      #   with:
      #     branch: gh-pages # The branch the action should deploy to.
      #     folder: docs # The folder the action should deploy.
          
          
